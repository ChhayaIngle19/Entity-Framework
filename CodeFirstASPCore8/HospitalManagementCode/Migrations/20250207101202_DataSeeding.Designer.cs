// <auto-generated />
using System;
using HospitalManagementCode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalManagementCode.Migrations
{
    [DbContext(typeof(AdminPortalDBContext))]
    [Migration("20250207101202_DataSeeding")]
    partial class DataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalManagementCode.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Line2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("WorkEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("ZipPinCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            City = "Los Angeles",
                            Country = "USA",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Line1 = "123 Main St",
                            Line2 = "Suite 100",
                            StateProvince = "CA",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZipPinCode = "90001"
                        },
                        new
                        {
                            Id = 2L,
                            City = "Toronto",
                            Country = "Canada",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Line1 = "456 Oak St",
                            Line2 = "Suite 200",
                            StateProvince = "ON",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZipPinCode = "M5H 2N2"
                        },
                        new
                        {
                            Id = 3L,
                            City = "San Francisco",
                            Country = "USA",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Line1 = "789 Maple Rd",
                            Line2 = "Apt 303",
                            StateProvince = "CA",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZipPinCode = "94110"
                        },
                        new
                        {
                            Id = 4L,
                            City = "Vancouver",
                            Country = "Canada",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Line1 = "101 Pine St",
                            Line2 = "Suite 5",
                            StateProvince = "BC",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZipPinCode = "V6B 1A4"
                        },
                        new
                        {
                            Id = 5L,
                            City = "New York",
                            Country = "USA",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Line1 = "202 Birch Ave",
                            Line2 = "Unit 7",
                            StateProvince = "NY",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZipPinCode = "10001"
                        });
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Abbr = "USA",
                            Continent = "North America",
                            CountryCode = "US",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "United States",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            Abbr = "CAN",
                            Continent = "North America",
                            CountryCode = "CA",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Canada",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            Abbr = "UK",
                            Continent = "Europe",
                            CountryCode = "UK",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "United Kingdom",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            Abbr = "DE",
                            Continent = "Europe",
                            CountryCode = "DE",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Germany",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            Abbr = "AUS",
                            Continent = "Oceania",
                            CountryCode = "AU",
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Australia",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email_Personal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_Work")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmployeeNameId")
                        .HasColumnType("bigint");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HCPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HCPId1")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<long?>("HomeAddressId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HospitalId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClinician")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile_Personal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_Work")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("WorkAddressId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNameId");

                    b.HasIndex("HCPId");

                    b.HasIndex("HCPId1");

                    b.HasIndex("HomeAddressId");

                    b.HasIndex("HospitalId");

                    b.HasIndex("RegionId");

                    b.HasIndex("WorkAddressId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1990, 5, 20),
                            Email_Work = "admin@hospital.com",
                            Gender = "Male",
                            HireDate = new DateOnly(2015, 1, 1),
                            IsActive = true,
                            IsClinician = true,
                            Mobile_Work = "1234567890",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1985, 8, 10),
                            Email_Work = "doctor@hospital.com",
                            Gender = "Female",
                            HireDate = new DateOnly(2017, 3, 15),
                            IsActive = true,
                            IsClinician = true,
                            Mobile_Work = "9876543210",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1980, 11, 25),
                            Email_Work = "nurse@hospital.com",
                            Gender = "Male",
                            HireDate = new DateOnly(2019, 6, 12),
                            IsActive = true,
                            IsClinician = false,
                            Mobile_Work = "5551234567",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1992, 3, 7),
                            Email_Work = "pharmacist@hospital.com",
                            Gender = "Female",
                            HireDate = new DateOnly(2020, 1, 20),
                            IsActive = true,
                            IsClinician = false,
                            Mobile_Work = "5559876543",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1995, 6, 15),
                            Email_Work = "admin2@hospital.com",
                            Gender = "Male",
                            HireDate = new DateOnly(2022, 9, 10),
                            IsActive = true,
                            IsClinician = true,
                            Mobile_Work = "5555555555",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalManagementCode.Models.HCP", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("HCPAddressId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HCPRegionIdId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsLicenseKeyActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSecretKeyEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("PrimaryAdminId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PrimaryInformationAnalystId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HCPAddressId");

                    b.HasIndex("HCPRegionIdId");

                    b.HasIndex("PrimaryAdminId");

                    b.HasIndex("PrimaryInformationAnalystId");

                    b.ToTable("HCP");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsLicenseKeyActivated = false,
                            IsSecretKeyEnabled = true,
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Healthcare Provider 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsLicenseKeyActivated = true,
                            IsSecretKeyEnabled = true,
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Healthcare Provider 2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsLicenseKeyActivated = true,
                            IsSecretKeyEnabled = false,
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Healthcare Provider 3"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsLicenseKeyActivated = false,
                            IsSecretKeyEnabled = false,
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Healthcare Provider 4"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsLicenseKeyActivated = true,
                            IsSecretKeyEnabled = true,
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Healthcare Provider 5"
                        });
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Hospital", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<short>("Beds")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("HospitalAddressId")
                        .HasColumnType("bigint");

                    b.Property<short>("InPatientGroupsCount")
                        .HasColumnType("smallint");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("PrimaryAdminId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HospitalAddressId");

                    b.HasIndex("PrimaryAdminId");

                    b.HasIndex("RegionId")
                        .IsUnique()
                        .HasFilter("[RegionId] IS NOT NULL");

                    b.ToTable("Hospital");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Beds = (short)0,
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A major hospital in the city",
                            InPatientGroupsCount = (short)0,
                            Name = "General Hospital",
                            UpdateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            Beds = (short)0,
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A community hospital",
                            InPatientGroupsCount = (short)0,
                            Name = "City Health Center",
                            UpdateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            Beds = (short)0,
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Specialty care hospital",
                            InPatientGroupsCount = (short)0,
                            Name = "Northside Medical",
                            UpdateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            Beds = (short)0,
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary care and urgent care services",
                            InPatientGroupsCount = (short)0,
                            Name = "Sunrise Clinic",
                            UpdateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            Beds = (short)0,
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A hospital located on the coast",
                            InPatientGroupsCount = (short)0,
                            Name = "Coastal Hospital",
                            UpdateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalManagementCode.Models.PersonName", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdateTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NamePrefixType")
                        .HasColumnType("int");

                    b.Property<int?>("NameSuffixType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonName");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe",
                            LastUpdateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MiddleName = "A."
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            LastName = "Smith",
                            LastUpdateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MiddleName = "B."
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            LastName = "Johnson",
                            LastUpdateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MiddleName = "C."
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emily",
                            LastName = "Davis",
                            LastUpdateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MiddleName = "D."
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "David",
                            LastName = "Wilson",
                            LastUpdateTimeStamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MiddleName = "E."
                        });
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("PrimaryAdminId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StateProvincesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryAdminId");

                    b.HasIndex("StateProvincesId");

                    b.ToTable("Region");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "West Coast"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eastern Canada"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Midwest USA"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Southeast Asia"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Central Europe"
                        });
                });

            modelBuilder.Entity("HospitalManagementCode.Models.StateProvince", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long?>("StateHospitalsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateHospitalsId");

                    b.ToTable("StateProvince");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbr = "CA",
                            CountryId = 1L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "California",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Abbr = "ON",
                            CountryId = 2L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ontario",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Abbr = "BY",
                            CountryId = 4L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bavaria",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Abbr = "NSW",
                            CountryId = 5L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New South Wales",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Abbr = "LDN",
                            CountryId = 3L,
                            CreatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "London",
                            UpdatedTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Address", b =>
                {
                    b.HasOne("HospitalManagementCode.Models.Employee", null)
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Employee", b =>
                {
                    b.HasOne("HospitalManagementCode.Models.PersonName", "EmployeeName")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeNameId");

                    b.HasOne("HospitalManagementCode.Models.HCP", null)
                        .WithMany("SecondaryAdmin")
                        .HasForeignKey("HCPId");

                    b.HasOne("HospitalManagementCode.Models.HCP", null)
                        .WithMany("SecondaryInformationAnalyst")
                        .HasForeignKey("HCPId1");

                    b.HasOne("HospitalManagementCode.Models.Address", "HomeAddress")
                        .WithMany()
                        .HasForeignKey("HomeAddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HospitalManagementCode.Models.Hospital", null)
                        .WithMany("SecondaryAdmins")
                        .HasForeignKey("HospitalId");

                    b.HasOne("HospitalManagementCode.Models.Region", null)
                        .WithMany("SecondaryAdmin")
                        .HasForeignKey("RegionId");

                    b.HasOne("HospitalManagementCode.Models.Address", "WorkAddress")
                        .WithMany()
                        .HasForeignKey("WorkAddressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("EmployeeName");

                    b.Navigation("HomeAddress");

                    b.Navigation("WorkAddress");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.HCP", b =>
                {
                    b.HasOne("HospitalManagementCode.Models.Address", "HCPAddress")
                        .WithMany("HCPs")
                        .HasForeignKey("HCPAddressId");

                    b.HasOne("HospitalManagementCode.Models.Region", "HCPRegionId")
                        .WithMany("HCPs")
                        .HasForeignKey("HCPRegionIdId");

                    b.HasOne("HospitalManagementCode.Models.Employee", "PrimaryAdmin")
                        .WithMany()
                        .HasForeignKey("PrimaryAdminId");

                    b.HasOne("HospitalManagementCode.Models.Employee", "PrimaryInformationAnalyst")
                        .WithMany()
                        .HasForeignKey("PrimaryInformationAnalystId");

                    b.Navigation("HCPAddress");

                    b.Navigation("HCPRegionId");

                    b.Navigation("PrimaryAdmin");

                    b.Navigation("PrimaryInformationAnalyst");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Hospital", b =>
                {
                    b.HasOne("HospitalManagementCode.Models.Address", "HospitalAddress")
                        .WithMany("Hospitals")
                        .HasForeignKey("HospitalAddressId");

                    b.HasOne("HospitalManagementCode.Models.Employee", "PrimaryAdmin")
                        .WithMany()
                        .HasForeignKey("PrimaryAdminId");

                    b.HasOne("HospitalManagementCode.Models.Region", null)
                        .WithOne("RegionHospitals")
                        .HasForeignKey("HospitalManagementCode.Models.Hospital", "RegionId");

                    b.Navigation("HospitalAddress");

                    b.Navigation("PrimaryAdmin");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Region", b =>
                {
                    b.HasOne("HospitalManagementCode.Models.Employee", "PrimaryAdmin")
                        .WithMany()
                        .HasForeignKey("PrimaryAdminId");

                    b.HasOne("HospitalManagementCode.Models.StateProvince", "StateProvinces")
                        .WithMany()
                        .HasForeignKey("StateProvincesId");

                    b.Navigation("PrimaryAdmin");

                    b.Navigation("StateProvinces");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.StateProvince", b =>
                {
                    b.HasOne("HospitalManagementCode.Models.Country", null)
                        .WithMany("CountryStateProvinces")
                        .HasForeignKey("CountryId");

                    b.HasOne("HospitalManagementCode.Models.Hospital", "StateHospitals")
                        .WithMany()
                        .HasForeignKey("StateHospitalsId");

                    b.Navigation("StateHospitals");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Address", b =>
                {
                    b.Navigation("HCPs");

                    b.Navigation("Hospitals");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Country", b =>
                {
                    b.Navigation("CountryStateProvinces");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Employee", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.HCP", b =>
                {
                    b.Navigation("SecondaryAdmin");

                    b.Navigation("SecondaryInformationAnalyst");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Hospital", b =>
                {
                    b.Navigation("SecondaryAdmins");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.PersonName", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HospitalManagementCode.Models.Region", b =>
                {
                    b.Navigation("HCPs");

                    b.Navigation("RegionHospitals");

                    b.Navigation("SecondaryAdmin");
                });
#pragma warning restore 612, 618
        }
    }
}

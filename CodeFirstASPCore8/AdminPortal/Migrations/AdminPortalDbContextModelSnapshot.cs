// <auto-generated />
using System;
using AdminPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminPortal.Migrations
{
    [DbContext(typeof(AdminPortalDbContext))]
    partial class AdminPortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminPortal.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime?>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeId1")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeId2")
                        .HasColumnType("bigint");

                    b.Property<long?>("HCPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HospitalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Line2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipPinCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1")
                        .IsUnique()
                        .HasFilter("[EmployeeId1] IS NOT NULL");

                    b.HasIndex("EmployeeId2")
                        .IsUnique()
                        .HasFilter("[EmployeeId2] IS NOT NULL");

                    b.HasIndex("HCPId")
                        .IsUnique()
                        .HasFilter("[HCPId] IS NOT NULL");

                    b.HasIndex("HospitalId")
                        .IsUnique()
                        .HasFilter("[HospitalId] IS NOT NULL");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("AdminPortal.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Continent")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime?>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("AdminPortal.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email_Personal")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Email_Work")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long>("EmployeeNameId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<long?>("HCPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HCPId1")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<long?>("HospitalId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClinician")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile_Personal")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Mobile_Work")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNameId");

                    b.HasIndex("HCPId");

                    b.HasIndex("HCPId1");

                    b.HasIndex("HospitalId");

                    b.HasIndex("RegionId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AdminPortal.Models.HCP", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("AreSecretQuestionsSetup")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsLicenseKeyActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRootUserIdEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSecretKeyEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("PrimaryInformationAnalystId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PrimaryInformationAnalystId");

                    b.ToTable("HCP");
                });

            modelBuilder.Entity("AdminPortal.Models.Hospital", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<short>("Beds")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short>("InPatientGroupsCount")
                        .HasColumnType("smallint");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StateProvinceId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegionId")
                        .IsUnique()
                        .HasFilter("[RegionId] IS NOT NULL");

                    b.HasIndex("StateProvinceId");

                    b.HasIndex("StateProvinceId1");

                    b.ToTable("Hospital");
                });

            modelBuilder.Entity("AdminPortal.Models.PersonName", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Prefix")
                        .HasColumnType("int");

                    b.Property<int?>("Suffix")
                        .HasColumnType("int");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonName");
                });

            modelBuilder.Entity("AdminPortal.Models.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<long?>("HCPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HCPId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<long?>("PrimaryAdminId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HCPId");

                    b.HasIndex("HCPId1")
                        .IsUnique()
                        .HasFilter("[HCPId1] IS NOT NULL");

                    b.HasIndex("PrimaryAdminId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("AdminPortal.Models.StateProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Abbr")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegionId")
                        .IsUnique()
                        .HasFilter("[RegionId] IS NOT NULL");

                    b.ToTable("StateProvince");
                });

            modelBuilder.Entity("AdminPortal.Models.Address", b =>
                {
                    b.HasOne("AdminPortal.Models.Employee", "Employee")
                        .WithMany("Address")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminPortal.Models.Employee", null)
                        .WithOne("HomeAddress")
                        .HasForeignKey("AdminPortal.Models.Address", "EmployeeId1");

                    b.HasOne("AdminPortal.Models.Employee", null)
                        .WithOne("WorkAddress")
                        .HasForeignKey("AdminPortal.Models.Address", "EmployeeId2");

                    b.HasOne("AdminPortal.Models.HCP", "HCP")
                        .WithOne("Address")
                        .HasForeignKey("AdminPortal.Models.Address", "HCPId");

                    b.HasOne("AdminPortal.Models.Hospital", "Hospital")
                        .WithOne("HospitalAddress")
                        .HasForeignKey("AdminPortal.Models.Address", "HospitalId");

                    b.Navigation("Employee");

                    b.Navigation("HCP");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("AdminPortal.Models.Employee", b =>
                {
                    b.HasOne("AdminPortal.Models.PersonName", "EmployeeName")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminPortal.Models.HCP", null)
                        .WithMany("SecondaryAdmin")
                        .HasForeignKey("HCPId");

                    b.HasOne("AdminPortal.Models.HCP", null)
                        .WithMany("SecondaryInformationAnalyst")
                        .HasForeignKey("HCPId1");

                    b.HasOne("AdminPortal.Models.Hospital", null)
                        .WithMany("SecondaryAdmins")
                        .HasForeignKey("HospitalId");

                    b.HasOne("AdminPortal.Models.Region", null)
                        .WithMany("SecondaryAdmin")
                        .HasForeignKey("RegionId");

                    b.Navigation("EmployeeName");
                });

            modelBuilder.Entity("AdminPortal.Models.HCP", b =>
                {
                    b.HasOne("AdminPortal.Models.Employee", "PrimaryAdmin")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminPortal.Models.Employee", "PrimaryInformationAnalyst")
                        .WithMany()
                        .HasForeignKey("PrimaryInformationAnalystId");

                    b.Navigation("PrimaryAdmin");

                    b.Navigation("PrimaryInformationAnalyst");
                });

            modelBuilder.Entity("AdminPortal.Models.Hospital", b =>
                {
                    b.HasOne("AdminPortal.Models.Region", null)
                        .WithOne("Hospital")
                        .HasForeignKey("AdminPortal.Models.Hospital", "RegionId");

                    b.HasOne("AdminPortal.Models.Employee", "PrimaryAdmin")
                        .WithMany()
                        .HasForeignKey("StateProvinceId");

                    b.HasOne("AdminPortal.Models.StateProvince", null)
                        .WithMany("Hospital")
                        .HasForeignKey("StateProvinceId1");

                    b.Navigation("PrimaryAdmin");
                });

            modelBuilder.Entity("AdminPortal.Models.Region", b =>
                {
                    b.HasOne("AdminPortal.Models.HCP", "HCP")
                        .WithMany()
                        .HasForeignKey("HCPId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminPortal.Models.HCP", null)
                        .WithOne("Region")
                        .HasForeignKey("AdminPortal.Models.Region", "HCPId1");

                    b.HasOne("AdminPortal.Models.Employee", "PrimaryAdmin")
                        .WithMany()
                        .HasForeignKey("PrimaryAdminId");

                    b.Navigation("HCP");

                    b.Navigation("PrimaryAdmin");
                });

            modelBuilder.Entity("AdminPortal.Models.StateProvince", b =>
                {
                    b.HasOne("AdminPortal.Models.Country", "Country")
                        .WithMany("StateProvince")
                        .HasForeignKey("CountryId");

                    b.HasOne("AdminPortal.Models.Region", "Region")
                        .WithOne("StateProvince")
                        .HasForeignKey("AdminPortal.Models.StateProvince", "RegionId");

                    b.Navigation("Country");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("AdminPortal.Models.Country", b =>
                {
                    b.Navigation("StateProvince");
                });

            modelBuilder.Entity("AdminPortal.Models.Employee", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("HomeAddress");

                    b.Navigation("WorkAddress");
                });

            modelBuilder.Entity("AdminPortal.Models.HCP", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Region");

                    b.Navigation("SecondaryAdmin");

                    b.Navigation("SecondaryInformationAnalyst");
                });

            modelBuilder.Entity("AdminPortal.Models.Hospital", b =>
                {
                    b.Navigation("HospitalAddress");

                    b.Navigation("SecondaryAdmins");
                });

            modelBuilder.Entity("AdminPortal.Models.PersonName", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("AdminPortal.Models.Region", b =>
                {
                    b.Navigation("Hospital");

                    b.Navigation("SecondaryAdmin");

                    b.Navigation("StateProvince");
                });

            modelBuilder.Entity("AdminPortal.Models.StateProvince", b =>
                {
                    b.Navigation("Hospital");
                });
#pragma warning restore 612, 618
        }
    }
}
